// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.fr');

goog.require('Blockly.Msg');

Blockly.Msg.ACTIVITY_TOOLTIP = "Marker for an additional activity.";  // untranslated
Blockly.Msg.ACTOR_TOOLTIP = "Represents any actor.";  // untranslated
Blockly.Msg.ADD_COMMENT = "Ajouter un commentaire";
Blockly.Msg.AUTH = "Veuillez autoriser cette application à permettre la sauvegarde de votre travail et à l’autoriser d'être partagé par vous.";
Blockly.Msg.BRICKLIGHT = "EV3 brick light";  // untranslated
Blockly.Msg.BRICKLIGHT_BLUE = "blue";  // untranslated
Blockly.Msg.BRICKLIGHT_COLOR = "colour";  // untranslated
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "double flashing";  // untranslated
Blockly.Msg.BRICKLIGHT_FLASH = "flashing";  // untranslated
Blockly.Msg.BRICKLIGHT_GREEN = "green";  // untranslated
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Turns EV3 bricklight off.";  // untranslated
Blockly.Msg.BRICKLIGHT_ON = "on";  // untranslated
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Turns EV3 bricklight on.";  // untranslated
Blockly.Msg.BRICKLIGHT_ORANGE = "orange";  // untranslated
Blockly.Msg.BRICKLIGHT_RED = "red";  // untranslated
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Resets EV3 bricklight. Sets the default EV3 bricklight: green and blinking.";  // untranslated
Blockly.Msg.BRICK_TRACK_WIDTH = "track width";  // untranslated
Blockly.Msg.BRICK_WHEEL_DIAMETER = "wheel diameter";  // untranslated
Blockly.Msg.BUTTON_DO_DELETE = "Delete";  // untranslated
Blockly.Msg.BUTTON_DO_SHARE = "Share";  // untranslated
Blockly.Msg.BUTTON_EMPTY_LIST = "Empty list";  // untranslated
Blockly.Msg.BUTTON_FINISH = "Finish";  // untranslated
Blockly.Msg.BUTTON_LOAD = "Load";  // untranslated
Blockly.Msg.BUTTON_MORE = "more";  // untranslated
Blockly.Msg.BUTTON_REFRESH = "Refresh";  // untranslated
Blockly.Msg.BUTTON_START = "Try it";  // untranslated
Blockly.Msg.BUTTON_STOP = "Stop";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Modifier la valeur :";
Blockly.Msg.CHAT = "Discutez avec votre collaborateur en tapant dans cette zone !";
Blockly.Msg.CLEAN_UP = "Nettoyer les blocs";
Blockly.Msg.COLLAPSE_ALL = "Réduire les blocs";
Blockly.Msg.COLLAPSE_BLOCK = "Réduire le bloc";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "couleur 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "couleur 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "taux";
Blockly.Msg.COLOUR_BLEND_TITLE = "mélanger";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mélange deux couleurs dans une proportion donnée (de 0.0 à 1.0).";
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Gets the current reading from the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://fr.wikipedia.org/wiki/Couleur";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Choisir une couleur dans la palette.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "couleur aléatoire";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Choisir une couleur au hasard.";
Blockly.Msg.COLOUR_RGB_BLUE = "bleu";
Blockly.Msg.COLOUR_RGB_GREEN = "vert";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rouge";
Blockly.Msg.COLOUR_RGB_TITLE = "colorier avec";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Créer une couleur avec la quantité spécifiée de rouge, vert et bleu. Les valeurs doivent être comprises entre 0 et 100.";
Blockly.Msg.COLOUR_TOOLTIP = "Represents EV3 colour sensor.";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "Left motor missing in the configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Left motor is not regulated!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "Motor is missing on the given port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "Right motor missing in the configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Right motor is not regulated!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "This sensor is not set to the port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "Connected wrong sesnor to the given port!";  // untranslated
Blockly.Msg.CONNECTION_CHECK = "connection to robot %1 active?";  // untranslated
Blockly.Msg.CONNECTION_CHECK_TOOLTIP = "check if the connection to the robot is active.";  // untranslated
Blockly.Msg.CONNECTION_CONNECT = "connect to robot name";  // untranslated
Blockly.Msg.CONNECTION_FROM_ROBOT = "from robot";  // untranslated
Blockly.Msg.CONNECTION_OVER_CHANNEL = "over channel";  // untranslated
Blockly.Msg.CONNECTION_RECEIVED_DATA = "receive message";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Waits for a message from the robot which you declare in the connection.";  // untranslated
Blockly.Msg.CONNECTION_START_TOOLTIP = "Tries to make a connection to another robot via bluetooth.";  // untranslated
Blockly.Msg.CONNECTION_TOOLTIP = "A robot's connection";  // untranslated
Blockly.Msg.CONNECTION_TO_CONNECTION = "to connection";  // untranslated
Blockly.Msg.CONNECTION_TO_ROBOT = "to robot";  // untranslated
Blockly.Msg.CONNECTION_USED_CONNECTION = "via connection";  // untranslated
Blockly.Msg.CONNECTION_WAIT_FOR_CONNECTION = "wait for connection";  // untranslated
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Waits for a connection via bluetooth.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "quitter la boucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "passer à l’itération de boucle suivante";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Sortir de la boucle englobante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Sauter le reste de cette boucle, et poursuivre avec l’itération suivante.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Attention : Ce bloc ne devrait être utilisé que dans une boucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "pour chaque élément %1 dans la liste %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Pour chaque élément d’une liste, assigner la valeur de l’élément à la variable '%1', puis exécuter des instructions.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "compter avec %1 de %2 à %3 par %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Faire prendre à la variable « %1 » les valeurs depuis le nombre de début jusqu’au nombre de fin, en s’incrémentant du pas spécifié, et exécuter les instructions spécifiées.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Ajouter une condition au bloc si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Ajouter une condition finale fourre-tout au bloc si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Ajouter, supprimer ou réordonner les sections pour reconfigurer ce bloc si.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sinon";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sinon si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si une valeur est vraie, alors exécuter certains ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si une valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si la première valeur est vraie, alors exécuter le premier bloc d’ordres. Sinon, si la seconde valeur est vraie, exécuter le second bloc d’ordres. Si aucune des valeurs n’est vraie, exécuter le dernier bloc d’ordres.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://fr.wikipedia.org/wiki/Boucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "faire";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "répéter %1 fois";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Exécuter des instructions plusieurs fois.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "répéter jusqu’à";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "répéter tant que";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Tant qu’une valeur est fausse, alors exécuter des instructions.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Tant qu’une valeur est vraie, alors exécuter des instructions.";
Blockly.Msg.DATATABLE_ACTUALIZATION = "Actualization date";  // untranslated
Blockly.Msg.DATATABLE_BLOCKS = "Blocks";  // untranslated
Blockly.Msg.DATATABLE_CONFIGURATIONS = "configurations";  // untranslated
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Configuration name";  // untranslated
Blockly.Msg.DATATABLE_CREATED_BY = "Creator";  // untranslated
Blockly.Msg.DATATABLE_CREATED_ON = "Creation date";  // untranslated
Blockly.Msg.DATATABLE_EMPTY_TABLE = "There are no entries in this table";  // untranslated
Blockly.Msg.DATATABLE_ENTRIES = "entries";  // untranslated
Blockly.Msg.DATATABLE_FIRST = "<< First";  // untranslated
Blockly.Msg.DATATABLE_LAST = "Last >>";  // untranslated
Blockly.Msg.DATATABLE_NEXT = "Next >";  // untranslated
Blockly.Msg.DATATABLE_OF = "of";  // untranslated
Blockly.Msg.DATATABLE_PREVIOUS = "< Prev";  // untranslated
Blockly.Msg.DATATABLE_PROGRAMS = "programs";  // untranslated
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Program name";  // untranslated
Blockly.Msg.DATATABLE_SHARED = "Shared";  // untranslated
Blockly.Msg.DATATABLE_SHARED_WITH = "Shared with";  // untranslated
Blockly.Msg.DATATABLE_SHOW = "Show";  // untranslated
Blockly.Msg.DATATABLE_SHOWING = "Showing";  // untranslated
Blockly.Msg.DATATABLE_TO = "to";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "Supprimer ces %1 blocs ?";
Blockly.Msg.DELETE_BLOCK = "Supprimer le bloc";
Blockly.Msg.DELETE_X_BLOCKS = "Supprimer %1 blocs";
Blockly.Msg.DISABLE_BLOCK = "Désactiver le bloc";
Blockly.Msg.DISPLAY_CLEAR = "clear display";  // untranslated
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Clears the display.";  // untranslated
Blockly.Msg.DISPLAY_COL = "in column";  // untranslated
Blockly.Msg.DISPLAY_PICTURE = "picture";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "eyes closed";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "eyes open";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "flowers";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "glasses";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_TACHO = "tacho";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Displays a picture on the screen.";  // untranslated
Blockly.Msg.DISPLAY_ROW = "in row";  // untranslated
Blockly.Msg.DISPLAY_SHOW = "show";  // untranslated
Blockly.Msg.DISPLAY_TEXT = "text";  // untranslated
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Displays a text on the screen.";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Dupliquer";
Blockly.Msg.ENABLE_BLOCK = "Activer le bloc";
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gets the current reading from the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Resets the motor encoder.";  // untranslated
Blockly.Msg.EV3BRICK_TOOLTIP = "EV3 brick.";  // untranslated
Blockly.Msg.EXPAND_ALL = "Développer les blocs";
Blockly.Msg.EXPAND_BLOCK = "Développer le bloc";
Blockly.Msg.EXTERNAL_INPUTS = "Entrées externes";
Blockly.Msg.FOR = "for";  // untranslated
Blockly.Msg.GET = "get";  // untranslated
Blockly.Msg.GETSAMPLE_TOOLTIP = "Gets the current reading from choosen sensor.";  // untranslated
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gets the current reading from the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_RESET_TOOLTIP = "Resets the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_TOOLTIP = "Represents gyro sensor.";  // untranslated
Blockly.Msg.HELP = "Aide";
Blockly.Msg.IFELSE_TOOLTIP = "Checks the condition in 'if'. If the condition is true, executes the 'do' action; otherwise executes the 'else' action";  // untranslated
Blockly.Msg.IF_TOOLTIP = "Checks the condition in 'if'. If the condition is true, executes the 'do' action.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Gets the current reading from the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_TOOLTIP = "Represents infrared sensor.";  // untranslated
Blockly.Msg.INLINE_INPUTS = "Entrées en ligne";
Blockly.Msg.KEY_ISPRESSEDANDRELEASED_TOOLTIP = "Is the specific button pressed and released?";  // untranslated
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Is the selected button pressed?";  // untranslated
Blockly.Msg.LIGHT_GETSAMPLE_TOOLTIP = "Gets the current reading from the light sensor.";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "créer une liste vide";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Renvoyer une liste, de longueur 0, ne contenant aucun enregistrement";
Blockly.Msg.LISTS_CREATE_TITLE = "list";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "liste";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Ajouter, supprimer, ou réordonner les sections pour reconfigurer ce bloc de liste.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "créer une liste avec";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Ajouter un élément à la liste.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Créer une liste avec un nombre quelconque d’éléments.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "premier";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# depuis la fin";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtenir";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtenir et supprimer";
Blockly.Msg.LISTS_GET_INDEX_LAST = "dernier";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aléatoire";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "supprimer";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Supprime et renvoie le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Supprime et renvoie l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Supprime et renvoie le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Supprime et renvoie un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Supprime le premier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Supprime l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Supprime l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Supprime le dernier élément dans une liste.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Supprime un élément au hasard dans une liste.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "jusqu’à # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "jusqu’à #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "jusqu’à la fin";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtenir la sous-liste depuis le début";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtenir la sous-liste depuis # depuis la fin";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtenir la sous-liste depuis #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crée une copie de la partie spécifiée d’une liste.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "trouver la première occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "trouver la dernière occurrence de l’élément";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de l’élément dans la liste. Renvoie 0 si l'élément n'est pas trouvé.";
Blockly.Msg.LISTS_INLIST = "dans la liste";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Renvoie vrai si la liste est vide.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Renvoie la longueur d’une liste.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "créer une liste avec l’élément %1 répété %2 fois";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crée une liste consistant en la valeur fournie répétée le nombre de fois indiqué.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "comme";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insérer en";
Blockly.Msg.LISTS_SET_INDEX_SET = "mettre";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Insère l’élément au début d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Insère l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Insère l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Ajouter l’élément à la fin d’une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Insère l’élément au hasard dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Fixe le premier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Fixe l’élément à la position indiquée dans une liste. #1 est le dernier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Fixe l’élément à la position indiquée dans une liste. #1 est le premier élément.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Fixe le dernier élément dans une liste.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Fixe un élément au hasard dans une liste.";
Blockly.Msg.LISTS_SORT_HELPURL = "https://github.com/google/blockly/wiki/Lists#sorting-a-list";
Blockly.Msg.LISTS_SORT_ORDER_ASCENDING = "croissant";
Blockly.Msg.LISTS_SORT_ORDER_DESCENDING = "décroissant";
Blockly.Msg.LISTS_SORT_TITLE = "trier %1 %2 %3";
Blockly.Msg.LISTS_SORT_TOOLTIP = "Trier une copie d’une liste.";
Blockly.Msg.LISTS_SORT_TYPE_IGNORECASE = "alphabétique, en ignorant la casse";
Blockly.Msg.LISTS_SORT_TYPE_NUMERIC = "numérique";
Blockly.Msg.LISTS_SORT_TYPE_TEXT = "alphabétique";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "créer une liste depuis le texte";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "créer un texte depuis la liste";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Réunir une liste de textes en un seul, en les séparant par un séparateur.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Couper un texte en une liste de textes, en coupant à chaque séparateur.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "avec le séparateur";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "faux";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Renvoie soit vrai soit faux.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "vrai";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://fr.wikipedia.org/wiki/Inegalite_(mathematiques)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Renvoyer vrai si les deux entrées sont égales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Renvoyer vrai si la première entrée est plus grande que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Renvoyer vrai si la première entrée est plus grande ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Renvoyer vrai si la première entrée est plus petite que la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Renvoyer vrai si la première entrée est plus petite ou égale à la seconde.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Renvoyer vrai si les deux entrées sont différentes.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "pas %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Renvoie vrai si l’entrée est fausse. Renvoie faux si l’entrée est vraie.";
Blockly.Msg.LOGIC_NULL = "nul";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Renvoie nul.";
Blockly.Msg.LOGIC_OPERATION_AND = "et";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "ou";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Renvoyer vrai si les deux entrées sont vraies.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Renvoyer vrai si au moins une des entrées est vraie.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "test";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si faux";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si vrai";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Vérifier la condition dans 'test'. Si elle est vraie, renvoie la valeur 'si vrai' ; sinon renvoie la valeur 'si faux'.";
Blockly.Msg.LOOP = "repeat until";  // untranslated
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Repeats indefinitely an action.";  // untranslated
Blockly.Msg.LOOP_COUNT = "number";  // untranslated
Blockly.Msg.LOOP_FOREVER = "repeat indefinitely";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://fr.wikipedia.org/wiki/Arithmetique";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Renvoie la somme des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Renvoie le quotient des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Renvoie la différence des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Renvoie le produit des deux nombres.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Renvoie le premier nombre élevé à la puissance du second.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "incrémenter %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Ajouter un nombre à la variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Renvoie une des constantes courantes : π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…), ou ∞ (infini).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "contraindre %1 entre %2 et %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Contraindre un nombre à être entre les limites spécifiées (incluses).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "est divisible par";
Blockly.Msg.MATH_IS_EVEN = "est pair";
Blockly.Msg.MATH_IS_NEGATIVE = "est négatif";
Blockly.Msg.MATH_IS_ODD = "est impair";
Blockly.Msg.MATH_IS_POSITIVE = "est positif";
Blockly.Msg.MATH_IS_PRIME = "est premier";
Blockly.Msg.MATH_IS_TOOLTIP = "Vérifier si un nombre est pair, impair, premier, entier, positif, négatif, ou s’il est divisible par un certain nombre. Renvoie vrai ou faux.";
Blockly.Msg.MATH_IS_WHOLE = "est entier";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "reste de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Renvoyer le reste de la division euclidienne des deux nombres.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://fr.wikipedia.org/wiki/Nombre";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un nombre.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "moyenne de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "médiane de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimum de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "majoritaires de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "élément aléatoire de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "écart-type de la liste";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "somme de la liste";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Renvoyer la moyenne (arithmétique) des valeurs numériques dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Renvoyer le plus grand nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Renvoyer le nombre médian de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Renvoyer le plus petit nombre dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Renvoyer une liste des élément(s) le(s) plus courant(s) dans la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Renvoyer un élément dans la liste au hasard.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Renvoyer l’écart-type de la liste.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Renvoyer la somme de tous les nombres dans la liste.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fraction aléatoire";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Renvoyer une fraction aléatoire entre 0.0 (inclus) et 1.0 (exclus).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entier aléatoire entre %1 et %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Renvoyer un entier aléatoire entre les deux limites spécifiées, incluses.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "arrondir";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "arrondir par défaut";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "arrondir par excès";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Arrondir un nombre au-dessus ou au-dessous.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://fr.wikipedia.org/wiki/Racine_carree";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "valeur absolue";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "racine carrée";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Renvoie la valeur absolue d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Renvoie e à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Renvoie le logarithme naturel d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Renvoie le logarithme base 10 d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Renvoie l’opposé d’un nombre";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Renvoie 10 à la puissance d’un nombre.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Renvoie la racine carrée d’un nombre.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Renvoie l’arccosinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Renvoie l’arcsinus d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Renvoie l’arctangente d’un nombre.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Renvoie le cosinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Renvoie le sinus d’un angle en degrés (pas en radians).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Renvoie la tangente d’un angle en degrés (pas en radians).";
Blockly.Msg.ME = "Moi";
Blockly.Msg.MENU_ABOUT = "about";  // untranslated
Blockly.Msg.MENU_ATTACH = "attach ...";  // untranslated
Blockly.Msg.MENU_BEGINNER = "beginner";  // untranslated
Blockly.Msg.MENU_BUILDING_INSTRUCTIONS = "building instructions";  // untranslated
Blockly.Msg.MENU_CHANGE = "change ...";  // untranslated
Blockly.Msg.MENU_CHECK = "check";  // untranslated
Blockly.Msg.MENU_CONNECT = "connect ...";  // untranslated
Blockly.Msg.MENU_DELETE_USER = "delete user ...";  // untranslated
Blockly.Msg.MENU_EDIT = "edit";  // untranslated
Blockly.Msg.MENU_EDIT_TOOLTIP = "edit";  // untranslated
Blockly.Msg.MENU_EV3 = "EV3 preparation";  // untranslated
Blockly.Msg.MENU_EXPERT = "expert";  // untranslated
Blockly.Msg.MENU_EXPORT_PROG = "export program";  // untranslated
Blockly.Msg.MENU_FAQ = "FAQ";  // untranslated
Blockly.Msg.MENU_GENERAL = "general help";  // untranslated
Blockly.Msg.MENU_HELP = "help";  // untranslated
Blockly.Msg.MENU_HELP_TOOLTIP = "help";  // untranslated
Blockly.Msg.MENU_IMPORT_PROG = "import program";  // untranslated
Blockly.Msg.MENU_LIST = "list ...";  // untranslated
Blockly.Msg.MENU_LOGGING = "logging";  // untranslated
Blockly.Msg.MENU_LOG_IN = "login ...";  // untranslated
Blockly.Msg.MENU_LOG_OUT = "logout";  // untranslated
Blockly.Msg.MENU_MESSAGE_DOWNLOAD = "Your program has been successfully downloaded.";  // untranslated
Blockly.Msg.MENU_NEW = "new ...";  // untranslated
Blockly.Msg.MENU_PROGRAMMING = "programming with NEPO";  // untranslated
Blockly.Msg.MENU_PROPERTIES = "properties";  // untranslated
Blockly.Msg.MENU_ROBOT = "robot";  // untranslated
Blockly.Msg.MENU_ROBOT_STATE_INFO = "info";  // untranslated
Blockly.Msg.MENU_ROBOT_STATE_TOOLTIP = "robot info";  // untranslated
Blockly.Msg.MENU_ROBOT_TOOLTIP = "robots";  // untranslated
Blockly.Msg.MENU_SAVE = "save";  // untranslated
Blockly.Msg.MENU_SAVE_AS = "save as ...";  // untranslated
Blockly.Msg.MENU_SHOW_AGAIN = "show welcome note again";  // untranslated
Blockly.Msg.MENU_SHOW_CODE = "show code";  // untranslated
Blockly.Msg.MENU_SIM_BACK = "Back";  // untranslated
Blockly.Msg.MENU_SIM_BACK_TOOLTIP = "back to programming editor";  // untranslated
Blockly.Msg.MENU_SIM_DRAW = "Drawing Scene";  // untranslated
Blockly.Msg.MENU_SIM_INFO = "Info";  // untranslated
Blockly.Msg.MENU_SIM_MATH = "Math Scene";  // untranslated
Blockly.Msg.MENU_SIM_RESCUE = "Rescue Scene";  // untranslated
Blockly.Msg.MENU_SIM_ROBERTA = "Roberta Scene";  // untranslated
Blockly.Msg.MENU_SIM_ROBOT_TOOLTIP = "open/close the robot's view";  // untranslated
Blockly.Msg.MENU_SIM_SCENE_TOOLTIP = "change the scene";  // untranslated
Blockly.Msg.MENU_SIM_SIMPLE = "Simple Scene";  // untranslated
Blockly.Msg.MENU_SIM_START_PAUSE = "Start/Pause";  // untranslated
Blockly.Msg.MENU_SIM_STEP = "Step";  // untranslated
Blockly.Msg.MENU_SIM_STOP = "Stop";  // untranslated
Blockly.Msg.MENU_START_BRICK = "run on brick";  // untranslated
Blockly.Msg.MENU_START_SIM = "run in simulation";  // untranslated
Blockly.Msg.MENU_STATE_INFO = "state information";  // untranslated
Blockly.Msg.MENU_TOOLBOX = "NEPO-Blocks";  // untranslated
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO-Blocks beginner";  // untranslated
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO-Blocks expert";  // untranslated
Blockly.Msg.MENU_UPDATE_FIRMWARE = "update firmware";  // untranslated
Blockly.Msg.MENU_USER = "login";  // untranslated
Blockly.Msg.MENU_USER_STATE_TOOLTIP = "user info";  // untranslated
Blockly.Msg.MENU_USER_TOOLTIP = "user";  // untranslated
Blockly.Msg.MENU_ZOOM = "zoom";  // untranslated
Blockly.Msg.MENU_ZOOM_IN = "zoom in";  // untranslated
Blockly.Msg.MENU_ZOOM_OUT = "zoom out";  // untranslated
Blockly.Msg.MENU_ZOOM_RESET = "reset zoom";  // untranslated
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Configuration '$' was deleted";  // untranslated
Blockly.Msg.MESSAGE_EDIT_CHECK = "Your program is now checked!";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Your configuration has been saved";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Your configuration has been saved as '$'";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Your program has been saved";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Your program has been saved as '$'";  // untranslated
Blockly.Msg.MESSAGE_EDIT_START = "Your program $ will run in a moment!";  // untranslated
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "There is a conflict with the firmware version of your robot and the Open Roberta Lab. Please contact us.";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Please fill in a correct name. A correct name begins with a letter and can only contain letters or numbers.";  // untranslated
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Not available.";  // untranslated
Blockly.Msg.MESSAGE_PASSWORD_ERROR = "Password does not match the confirm password.";  // untranslated
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Program '$' was deleted";  // untranslated
Blockly.Msg.MESSAGE_RELATION_DELETED = "A relation of Program '$' was deleted";  // untranslated
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Please reconnect the robot to the Open Roberta Lab.";  // untranslated
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Your robot $ is connected";  // untranslated
Blockly.Msg.MESSAGE_ROBOT_FIRMWARE_UPDATE = "Your robot runs now version '$'";  // untranslated
Blockly.Msg.MESSAGE_USER_DELETED = "User deleted";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGIN = "Hello '$'";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGOUT = "You are logged out";  // untranslated
Blockly.Msg.MESSAGE_USER_NEW = "Hello '$'";  // untranslated
Blockly.Msg.MODE = "mode";  // untranslated
Blockly.Msg.MODE_AMBIENTLIGHT = "ambient light";  // untranslated
Blockly.Msg.MODE_ANGLE = "angle";  // untranslated
Blockly.Msg.MODE_COLOUR = "colour";  // untranslated
Blockly.Msg.MODE_DEGREE = "degree";  // untranslated
Blockly.Msg.MODE_DISTANCE = "distance";  // untranslated
Blockly.Msg.MODE_LIGHT = "light";  // untranslated
Blockly.Msg.MODE_PRESENCE = "presence";  // untranslated
Blockly.Msg.MODE_RATE = "rate";  // untranslated
Blockly.Msg.MODE_RGB = "RGB";  // untranslated
Blockly.Msg.MODE_ROTATION = "rotation";  // untranslated
Blockly.Msg.MODE_SOUND = "sound";  // untranslated
Blockly.Msg.MODE_STATE = "state";  // untranslated
Blockly.Msg.MOTOR = "motor";  // untranslated
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Starts the robot with specific speed and stops after specific distance.";  // untranslated
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Starts the robot with specific speed.";  // untranslated
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Stops the robot.";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Turns the robot for number of degrees.";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Turns the robot.";  // untranslated
Blockly.Msg.MOTOR_BACKWARD = "backwards";  // untranslated
Blockly.Msg.MOTOR_BIG = "big";  // untranslated
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Represents a big motor.";  // untranslated
Blockly.Msg.MOTOR_BRAKE = "brake";  // untranslated
Blockly.Msg.MOTOR_DEGREE = "degree";  // untranslated
Blockly.Msg.MOTOR_DISTANCE = "distance cm";  // untranslated
Blockly.Msg.MOTOR_DRIVE = "drive";  // untranslated
Blockly.Msg.MOTOR_FLOAT = "float";  // untranslated
Blockly.Msg.MOTOR_FOREWARD = "forwards";  // untranslated
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Gets current power of this motor.";  // untranslated
Blockly.Msg.MOTOR_LEFT = "left";  // untranslated
Blockly.Msg.MOTOR_MIDDLE = "middle";  // untranslated
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Represents a middle motor.";  // untranslated
Blockly.Msg.MOTOR_NONE = "none";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Turns motor on and stops motor after execution of rotations/degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP = "Turns motor on with specific power.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "other power consumer";  // untranslated
Blockly.Msg.MOTOR_PORT = "motor port";  // untranslated
Blockly.Msg.MOTOR_REGULATION = "regulation";  // untranslated
Blockly.Msg.MOTOR_RIGHT = "right";  // untranslated
Blockly.Msg.MOTOR_ROTATION = "rotation";  // untranslated
Blockly.Msg.MOTOR_ROTATION_REVERSE = "direction of rotation";  // untranslated
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Sets power of this motor.";  // untranslated
Blockly.Msg.MOTOR_SIDE = "side";  // untranslated
Blockly.Msg.MOTOR_SPEED = "speed";  // untranslated
Blockly.Msg.MOTOR_STOP = "stop";  // untranslated
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Stops this motor.";  // untranslated
Blockly.Msg.MOTOR_TURN = "turn";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Nouvelle variable…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nouveau nom de la variable :";
Blockly.Msg.NO = "no";  // untranslated
Blockly.Msg.OFF = "off";  // untranslated
Blockly.Msg.ON = "on";  // untranslated
Blockly.Msg.ORA_COMMAND_INVALID = "Invalid Javascript-command";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "The robot configuration could not be found on the server.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "The robot configuration could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "The program could not be transformed into machine code.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "The program could not be generated.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "The program could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "The program could not be saved because of an internal error.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "The program could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "An error has occurred while deleting the robot configuration, please try it again!";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Configuration deleted";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Configuration name is not a valid identifier.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "Configuration loaded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "The robot configuration could not be found in the database.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "Configuration loaded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "An error has occurred while saving the robot configuration.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occurred while saving the configuration in the database.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "Configuration saved";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "The owner does not exist.";  // untranslated
Blockly.Msg.ORA_PROGRAM_CONFIGURATION_NOT_COMPATIBLE = "Program is not compatible with the configuration";  // untranslated
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "An error error has occurred while deleding the configuration. Please try it again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Program deeleted";  // untranslated
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "The name of your  program is already used by the system. Please choose another name and try it again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Programs loaded";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Program not found.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "You are not logged in, please log in with your username and password or create a new user.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Program loaded";  // untranslated
Blockly.Msg.ORA_PROGRAM_IMPORT_ERROR = "This program is not a valid NEPO program and cannot be uploaded!";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "This program already exists.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NOT_SAVED_TO_DB = "An error has occurred while saving the program.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "You don't have the permission to modify this program!";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "This program has been changed recently by someone else. You can can save your changes in a new program, choose >save as< !";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "The program could not be found, so it is impossible to update it.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Program saved";  // untranslated
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "The program that you would like to share does not exist.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "An error has occurred while updating the new firmware on your robot.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "The firmware was updated";  // untranslated
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "There is no robot connected. Check if your robot is switched on, connect it to the server and type in the robots password under robot - connect in the menu. <br /> If you have problems to do this, please have a look at our help pages.";  // untranslated
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "The robot does not wait for a run command.";  // untranslated
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "Robot waited and now the jar is pushed to the robot";  // untranslated
Blockly.Msg.ORA_SERVER_ERROR = "Server-Error";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "Check if your robot is switched on and connected to the server. <br />If you have problems to do this, please have a look at our help pages.";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Token set";  // untranslated
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "An error has occurred while deleting the toolbox, please try it again!";  // untranslated
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Toolbox deleted";  // untranslated
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Toolbox name is not a valid identifier.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "The toolbox could not be found in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_LOAD_ERROR_NOT_FOUND = "The selected NEPO-Blocks could not be found in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_LOAD_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "An error has occurred while saving the toolbox.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occurred while saving the configuration in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Toolbox saved";  // untranslated
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation error?";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Check all required input fields have been filled out.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "The given user name already exists in the database.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "The user was successfully created";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Error while deleting user.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Error while deleting user in database.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "The user was successfully deleted";  // untranslated
Blockly.Msg.ORA_USER_EMAIL_ONE_ERROR_USER_NOT_EXISTS_WITH_THIS_EMAIL = "This email address is unknown, maybe you have spelled it wrong!";  // untranslated
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Users loaded";  // untranslated
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "You have entered wrong user name or password. Please try again!";  // untranslated
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Login successfull";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "The user with which you would like to share the program does not exist. <br />Try it again!";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "You cannot share any programs with yourself.";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PLAY = "play";  // untranslated
Blockly.Msg.PLAY_DURATION = "duration";  // untranslated
Blockly.Msg.PLAY_FILE = "file";  // untranslated
Blockly.Msg.PLAY_FILE_TOOLTIP = "Plays a sound file.";  // untranslated
Blockly.Msg.PLAY_FREQUENZ = "frequency";  // untranslated
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Gets current volume.";  // untranslated
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Sets volume.";  // untranslated
Blockly.Msg.PLAY_TONE = "tone";  // untranslated
Blockly.Msg.PLAY_TONE_TOOLTIP = "Plays a tone.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "volume";  // untranslated
Blockly.Msg.POPUP_ABOUT_JOIN = "I want to help";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT = "The Open Roberta Lab is a cloud-based integrated programming environment that enables children and adolescents to program easily Lego Mindstorms EV3 robots. This platform is completely open source so taking part is desirable! Both the software and the open source developer tools are available via Fraunhofer servers.";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "The Open Roberta Lab is an open-source programming platform developed by Fraunhofer IAIS within the initiative <a href='http://www.roberta-home.de/'>»Roberta – Learning with Robots«</a>";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta was initiated in collaboration with Google Germany to reduce the hurdles for students, teachers and schools programming educational robots. Open Roberta is financed by Google.org (2014 - 2015) with 1Mio Euro.</a>";  // untranslated
Blockly.Msg.POPUP_ATTENTION = "Attention";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD = "You have unsaved changes in your program or configuration. Sign in and save your program or configuration.";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "You have unsaved changes in your program or configuration.";  // untranslated
Blockly.Msg.POPUP_CANCEL = "Cancel";  // untranslated
Blockly.Msg.POPUP_CHANGE_PASSWORD = "change password ...";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Do you really want to delete the configuration ?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Do you really want to delete the program ?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "There is a new firmware version for your robot available. You can try to run programs with the old version, but best bet is to update your robot now! You just have to click >>Update now<<.";  // untranslated
Blockly.Msg.POPUP_CONTINUE = "continue anyway";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Update now";  // untranslated
Blockly.Msg.POPUP_EMAIL = "E-Mail";  // untranslated
Blockly.Msg.POPUP_EMAIL_SEND = "Send now";  // untranslated
Blockly.Msg.POPUP_NAME = "Name";  // untranslated
Blockly.Msg.POPUP_NEW_PASSWORD = "New Password";  // untranslated
Blockly.Msg.POPUP_NEW_RELEASE = "Version beta 1.4 <ul class='NonIcon'><li>Create one program for the real robot <strong>and</strong> for the simulated robot</li><li>Update blockly for better performance and zoom function</li></ul>";  // untranslated
Blockly.Msg.POPUP_OLD_PASSWORD = "Old Password";  // untranslated
Blockly.Msg.POPUP_PASSWORD = "Password";  // untranslated
Blockly.Msg.POPUP_PASSWORD_RECOVERY = "reset password ...";  // untranslated
Blockly.Msg.POPUP_PROGRAM_TERMINATED_UNEXPECTED = "The execution of the program on the robot has terminated unexpectedly!";  // untranslated
Blockly.Msg.POPUP_REGISTER_USER = "Register now";  // untranslated
Blockly.Msg.POPUP_RELEASE = "Version beta 1.3.2 <ul class='NonIcon'><li>Fix timestamp bug for save program</li></ul>Version beta 1.3.1 <ul class='NonIcon'><li>Spanish available now!</li><li>Fixed bugs</li></ul>Version beta 1.3.0 <ul class='NonIcon'><li>Simulate a robot!</li><li>Share your program with a friend</li><li>Update the robots firmware Over-the-Air</li><li>USB cabel support for Chromebooks</li><li>Fixed many more bugs</li></ul></br>";  // untranslated
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Repeat password";  // untranslated
Blockly.Msg.POPUP_ROBOT_BATTERY = "Voltage";  // untranslated
Blockly.Msg.POPUP_ROBOT_NAME = "Name";  // untranslated
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "You have to make a connection to your robot first.";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE = "State";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "busy";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "disconnected";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "wait";  // untranslated
Blockly.Msg.POPUP_ROBOT_SYSTEM = "System";  // untranslated
Blockly.Msg.POPUP_ROBOT_WAIT = "Waiting time";  // untranslated
Blockly.Msg.POPUP_SHARE_READ = "READ";  // untranslated
Blockly.Msg.POPUP_SHARE_WITH = "Share with ...";  // untranslated
Blockly.Msg.POPUP_SHARE_WRITE = "WRITE";  // untranslated
Blockly.Msg.POPUP_STARTUP_COOKIES = "We use cookies to personalise content and to analyse our traffic.";  // untranslated
Blockly.Msg.POPUP_STARTUP_DETAILS = "Show details.";  // untranslated
Blockly.Msg.POPUP_STARTUP_HELP = "Do you need help?";  // untranslated
Blockly.Msg.POPUP_STARTUP_HIDE = "Okay, don't show this window again.";  // untranslated
Blockly.Msg.POPUP_STARTUP_NEW = "What's new?";  // untranslated
Blockly.Msg.POPUP_STARTUP_TITLE = "Welcome";  // untranslated
Blockly.Msg.POPUP_TEXT_STARTUP_MESSAGE = "Three things you should know before starting:<ul class='icon'><li class='document-text'>Here you can program real EV3 robots </li><li class='Roberta'>Your robot needs a special system <a target='_blank' href='https://mp-devel.iais.fraunhofer.de/wiki/x/RIAd'>check!</a></li><li class='wi-fi'>Your robot needs wi-fi or a USB program <a target='_blank' href='https://mp-devel.iais.fraunhofer.de/wiki/x/RIAd'>check!</a></li><li class='arrow-right-thick'>If you are not sure, please have a look at the help pages ... <a target='_blank' href='https://mp-devel.iais.fraunhofer.de/wiki/x/A4AM'>more</a></li></ul><br /><p>What is new?</p>";  // untranslated
Blockly.Msg.POPUP_USERNAME = "Username";  // untranslated
Blockly.Msg.POPUP_USERNAME_LOGOFF = "You are not logged in.";  // untranslated
Blockly.Msg.POPUP_VALUE = "Value";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "autoriser les ordres";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://fr.wikipedia.org/wiki/Proc%C3%A9dure_%28informatique%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Exécuter la fonction '%1' définie par l’utilisateur et utiliser son résultat.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "avec :";
Blockly.Msg.PROCEDURES_CREATE_DO = "Créer '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Décrire cette fonction…";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "faire quelque chose";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "pour";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crée une fonction sans sortie.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retour";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crée une fonction avec une sortie.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Attention : Cette fonction a des paramètres en double.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Surligner la définition de la fonction";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si une valeur est vraie, alors renvoyer une seconde valeur.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Attention : Ce bloc pourrait n’être utilisé que dans une définition de fonction.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nom de l’entrée :";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Ajouter une entrée à la fonction.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entrées";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Ajouter, supprimer, ou réarranger les entrées de cette fonction.";
Blockly.Msg.PROCEDURES_TITLE = "' procedure";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Error: This block may be used only within the '";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Error: This block may be used only within a loop which declares ";  // untranslated
Blockly.Msg.REDO = "Refaire";
Blockly.Msg.REMOVE_COMMENT = "Supprimer un commentaire";
Blockly.Msg.RENAME_VARIABLE = "Renommer la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renommer toutes les variables « %1 » en :";
Blockly.Msg.SEND_DATA = "data to send";  // untranslated
Blockly.Msg.SENSOR_COLOUR = "colour sensor";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "encoder";  // untranslated
Blockly.Msg.SENSOR_GET_MODE = "get mode";  // untranslated
Blockly.Msg.SENSOR_GET_SAMPLE = "get value";  // untranslated
Blockly.Msg.SENSOR_GYRO = "gyroscope";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IS_PRESSED = "pressed?";  // untranslated
Blockly.Msg.SENSOR_KEY = "button";  // untranslated
Blockly.Msg.SENSOR_KEY_ANY = "any";  // untranslated
Blockly.Msg.SENSOR_KEY_DOWN = "down";  // untranslated
Blockly.Msg.SENSOR_KEY_ENTER = "enter";  // untranslated
Blockly.Msg.SENSOR_KEY_ESCAPE = "escape";  // untranslated
Blockly.Msg.SENSOR_KEY_LEFT = "left";  // untranslated
Blockly.Msg.SENSOR_KEY_RIGHT = "right";  // untranslated
Blockly.Msg.SENSOR_KEY_UP = "up";  // untranslated
Blockly.Msg.SENSOR_LIGHT = "light sensor";  // untranslated
Blockly.Msg.SENSOR_MS_TIMER = "in ms";  // untranslated
Blockly.Msg.SENSOR_PRESSED = " (pressed)";  // untranslated
Blockly.Msg.SENSOR_RESET = "reset";  // untranslated
Blockly.Msg.SENSOR_RESET_II = "";  // untranslated
Blockly.Msg.SENSOR_SET_MODE = "set mode";  // untranslated
Blockly.Msg.SENSOR_SOUND = "sound sensor";  // untranslated
Blockly.Msg.SENSOR_TIME = "time";  // untranslated
Blockly.Msg.SENSOR_TIMER = "timer";  // untranslated
Blockly.Msg.SENSOR_TOUCH = "touch sensor";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC = "ultrasonic sensor";  // untranslated
Blockly.Msg.SENSOR_WAIT_PRESSED = "pressed";  // untranslated
Blockly.Msg.SENSOR_WAIT_PRESSED_RELEASED = "pressed or released";  // untranslated
Blockly.Msg.SERVER_NOT_AVAILABLE = "The Open Roberta Lab is currently not available. </br> Please check your internet connection and try to reload this website. If the problem persists, please don't hasitate to contact us via mail:</br>roberta-zentrale@iais.fraunhofer.de";  // untranslated
Blockly.Msg.SET = "set";  // untranslated
Blockly.Msg.SIM_BLOCK_NOT_SUPPORTED = "Unfortunately you can not use this block in the simulation!";  // untranslated
Blockly.Msg.SIM_CONFIGURATION_WARNING_SENSOR_MISSING = "This sensor is not in the configuration! The behavior of the program on the real robot will be different than expected!";  // untranslated
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_INFRARED_SENSOR_PORT = "The infrared sensor is not connected in the configuration! The behavior of the program on the real robot will be different than expected, please check the robot configuration!";  // untranslated
Blockly.Msg.SIM_CONFIGURATION_WARNING_WRONG_SENSOR_PORT = "In this block you have used a wrong sensor port! The behavior of the program on the real robot will be different than expected, please check the robot configuration!";  // untranslated
Blockly.Msg.SOUND_GETSAMPLE_TOOLTIP = "Gets the current reading from the sound sensor.";  // untranslated
Blockly.Msg.START = "start";  // untranslated
Blockly.Msg.START_ACTIVITY = "activity";  // untranslated
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Starts additional activity.";  // untranslated
Blockly.Msg.START_PROGRAM = "program-start";  // untranslated
Blockly.Msg.START_PROGRAM_DEBUG = "show sensor data";  // untranslated
Blockly.Msg.START_TOOLTIP = "The starting point for the main program.";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "Robot configuration";  // untranslated
Blockly.Msg.TAB_PROGRAM = "Program";  // untranslated
Blockly.Msg.TAB_SIMULATION = "Simulation";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "ajouter le texte";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "à";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Ajouter du texte à la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "en minuscules";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "en Majuscule Au Début De Chaque Mot";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "en MAJUSCULES";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Renvoyer une copie du texte dans une autre casse.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtenir la première lettre";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtenir la lettre # depuis la fin";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtenir la lettre #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_CHARAT_LAST = "obtenir la dernière lettre";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtenir une lettre au hasard";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Renvoie la lettre à la position indiquée.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Ajouter un élément au texte.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "joindre";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Ajouter, supprimer, ou réordonner des sections pour reconfigurer ce bloc de texte.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "jusqu’à la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "jusqu’à la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "jusqu’à la dernière lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "dans le texte";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtenir la sous-chaîne depuis la première lettre";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtenir la sous-chaîne depuis la lettre # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtenir la sous-chaîne depuis la lettre #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Renvoie une partie indiquée du texte.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "dans le texte";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "trouver la première occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "trouver la dernière occurrence de la chaîne";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Renvoie l’index de la première/dernière occurrence de la première chaîne dans la seconde. Renvoie 0 si la chaîne n’est pas trouvée.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 est vide";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Renvoie vrai si le texte fourni est vide.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "créer un texte avec";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Créer un morceau de texte en agrégeant un nombre quelconque d’éléments.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longueur de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Renvoie le nombre de lettres (espaces compris) dans le texte fourni.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "afficher %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Afficher le texte, le nombre ou une autre valeur spécifié.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Demander un nombre à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Demander un texte à l’utilisateur.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "invite pour un nombre avec un message";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "invite pour un texte avec un message";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Une lettre, un mot ou une ligne de texte.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "supprimer les espaces des deux côtés";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "supprimer les espaces du côté gauche";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "supprimer les espaces du côté droit";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Renvoyer une copie du texte avec les espaces supprimés d’un bout ou des deux.";
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Gets the current reading from the timer.";  // untranslated
Blockly.Msg.TIMER_RESET_TOOLTIP = "Resets the timer.";  // untranslated
Blockly.Msg.TODAY = "Aujourd'hui";
Blockly.Msg.TOOLBOX_ACTION = "Action";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Colours";  // untranslated
Blockly.Msg.TOOLBOX_COMMUNICATION = "Messages";  // untranslated
Blockly.Msg.TOOLBOX_CONTROL = "Control";  // untranslated
Blockly.Msg.TOOLBOX_DECISION = "Decisions";  // untranslated
Blockly.Msg.TOOLBOX_DISPLAY = "Display";  // untranslated
Blockly.Msg.TOOLBOX_DRIVE = "Drive";  // untranslated
Blockly.Msg.TOOLBOX_GLOBAL_VARIABLE = "Global Variables";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "Lights";  // untranslated
Blockly.Msg.TOOLBOX_LIST = "Lists";  // untranslated
Blockly.Msg.TOOLBOX_LOGIC = "Logic";  // untranslated
Blockly.Msg.TOOLBOX_LOOP = "Loops";  // untranslated
Blockly.Msg.TOOLBOX_LOOP_VARIABLE = "Loop Variables";  // untranslated
Blockly.Msg.TOOLBOX_MATH = "Math";  // untranslated
Blockly.Msg.TOOLBOX_MOVE = "Move";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Functions";  // untranslated
Blockly.Msg.TOOLBOX_SENSOR = "Sensors";  // untranslated
Blockly.Msg.TOOLBOX_SOUND = "Sounds";  // untranslated
Blockly.Msg.TOOLBOX_TEXT = "Text";  // untranslated
Blockly.Msg.TOOLBOX_VARIABLE = "Variables";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Wait";  // untranslated
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUCH_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION00 = "next";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION01 = "Welcome,<br>click on  »next« and start a tour through the Open Roberta Lab.<br>I'll show you how you can program your robot with NEPO.<br>You can cancel this tour all the time with a click on »X« in the right upper corner.";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION02 = "The menu ;-)";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION03 = "Here you can find everything you need around the robot programming!<br><span class='typcn typcn-document-text'></span> Save and load programs<br><span class='typcn typcn-Roberta'></span> Connect your robot to the Open Roberta Lab<br><span class='typcn typcn-lightbulb'></span> Help for all kind of problems<br><span class='typcn typcn-user'></span> All about user accounts, e.g. login or logoff";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION04 = "Click here and switch to the robot configuration";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION05 = "You can adapt the robot configuration later,<br>if you've constructed another robot.<br>If you don't have a robot by hand and want to test your program in the simulation <br>this configuration is applied.";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION06 = "Click here and switch back to the programming area!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION07 = "The toolbox.<br>Here you can find all programming blocks.";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION08 = "Each program starts with the program-start-block«.<br>Further programming blocks, which the robot should execute, should be attached to this block.<br>Just drag'n drop the desired block right under the start block.";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION09 = "Here you find some shortcuts!<br>From left to right:<br><span class='typcn typcn-media-play'></span> Click here to execute the program on the real robo<br><span class='typcn typcn-media-play-outline'></span> Click here to start the robot in the simulation<br><span class='typcn typcn-cloud-storage'></span> Save your program, but before that you have to sign in<br><span class='typcn typcn-zoom'></span> Click here and zoom the blocks, if you want to<br><span class='typcn typcn-archive'></span> The trashcan! Just move blocks into the trashcan and they will be deleted.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Attention: You cannot recover blocks once they are deleted!<br>";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION10 = "Click on »Action«";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION11 = "Click and create the block in the workspace";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION12 = "Drag'n drop the new block now to just below the start-program-block so that they connect";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION13 = "Now test your program in the simulation!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION14 = "Just a moment!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION15 = "Super,<br>your robot is driveing 20 cm forward,<br>this is what you have programmed!";  // untranslated
Blockly.Msg.TOUR1_DESCRIPTION16 = "Bye and have fun while trying out more!";  // untranslated
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Gets the current reading from the ultrasonic sensor.";  // untranslated
Blockly.Msg.ULTRASONIC_TOOLTIP = "Represents EV3 ultrasonic sensor.";  // untranslated
Blockly.Msg.UNDO = "Annuler";
Blockly.Msg.VALIDATION_FIELD_REQUIRED = "This field cannot be empty!";  // untranslated
Blockly.Msg.VALIDATION_PASSWORD_MIN_LENGTH = "Password min length is 6!";  // untranslated
Blockly.Msg.VALIDATION_SECOND_PASSWORD_EQUAL = "The two passwords must be equal!";  // untranslated
Blockly.Msg.VALIDATION_TOKEN_LENGTH = "Token length is 8 characters!";  // untranslated
Blockly.Msg.VALIDATION_VALID_EMAIL_ADDRESS = "Please enter a valid email address!";  // untranslated
Blockly.Msg.VARIABLES_CREATE_TITLE = "Create";  // untranslated
Blockly.Msg.VARIABLES_CREATE_WITH = "with";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "élément";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Créer 'fixer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Renvoie la valeur de cette variable.";
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "Declares a global variable.";  // untranslated
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "Declares a local variable.";  // untranslated
Blockly.Msg.VARIABLES_SET = "fixer %1 à %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Créer 'obtenir %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Fixe cette variable pour qu’elle soit égale à la valeur de l’entrée.";
Blockly.Msg.VARIABLES_TITLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "List Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "List Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "List Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "List Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "List String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "String";  // untranslated
Blockly.Msg.WAIT = "wait";  // untranslated
Blockly.Msg.WAIT_FOREVER = "indefinitely";  // untranslated
Blockly.Msg.WAIT_FOR_TOOLTIP = "Waits for sensor values.";  // untranslated
Blockly.Msg.WAIT_OR = "or wait for";  // untranslated
Blockly.Msg.WAIT_TOOLTIP = "Waits for a condition becoming true.";  // untranslated
Blockly.Msg.WAIT_UNTIL = "wait until";  // untranslated
Blockly.Msg.YES = "yes";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;