# some of the following properties are retrieved from the parent pom.xml. They are used to guarantee that
# - the versions of the jars in the server match
# - the versions of the jars on the robot match
# - the version of the user program jar (generated on the server and transmitted to the robot) and the version of the jars on the robot match
# Note, that in every jar there is a top-level property file that contains the version at the time of compiling the classes contained in that jar
version = ${project.version}
validversionrange.From = ${validversionrange.From}
validversionrange.To = ${validversionrange.To}

# directory to store (temporarily) the generated user programs
crosscompiler.basedir    = ./userProjects/
# the ant script that calls the cross compiler and the tool creating the jar containing the user program
crosscompiler.build.xml  = ../OpenRobertaServer/src/main/resources/nbc

# the URL of the database is retrieved from the parent pom
hibernate.connection.url = ${hibernate.connection.url}

# the brick update rest service needs a directory in which jars/resources for updating are stored
robot.updateResources.dir = ../OpenRobertaServer/target/updateResources
# the cross compiler needs a directory in which all jars/resources for compilation are stored
robot.crossCompilerResources.dir = ../OpenRobertaServer/target/crossCompilerResources

# available robot types - each must be in the database
# default robot type - must be one out of the available types
robot.type.list = ev3,oraSim
robot.type.default = ev3